{
  "name": "simple-oop",
  "description": "Simple Object Oriented Programming in Javascript",
  "version": "1.5.0",
  "homepage": "https://github.com/jeanamarante/simple-oop",
  "author": {
    "name": "Jean Amarante",
    "url": "https://github.com/jeanamarante"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jeanamarante/simple-oop"
  },
  "bugs": {
    "url": "https://github.com/jeanamarante/simple-oop/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jeanamarante/simple-oop/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.10.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "simple",
    "OOP"
  ],
  "files": [
    "tasks",
    "LICENSE-MIT"
  ],
  "readme": "# simple-oop\n\n> Simple Object Oriented Programming in Javascript.\n\n## Getting Started\nThis plugin requires:\n* grunt                `~0.4.0`\n* grunt-contrib-watch  `^0.6.1`\n* grunt-contrib-concat `^0.4.0`\n* grunt-contrib-jshint `^0.10.0`\n    \nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install simple-oop --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('simple-oop');\n```\n\n\n\n\n\n## simple-oop task\n_Run this task with the `grunt simple-oop` command._\n\nTask targets, files and options may be specified according to the Grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n\n\n\n\n\n### Description\n\nsimple-oop is a wrapper that facilites the use of prototypes in JS.\n\n\n\n\n\n### Usage Example\n\n```js\n// Project configuration.\ngrunt.config.init({\n    'simple-oop': {\n        src:  'modules',\n        dest: 'js/app.js',\n        \n        global: 'TEST',\n\n        hint: true,\n\n        watch: false\n    }\n});\n```\n\n#### src / dest\n\nsrc is where you place all .js files, dest is where they end up concatenated as a single file.\n\n#### global\n\nWrite a name to expose your CLASS modules globally.\n\n```js\n// Attach CLASS to window\nthis.global = CLASS;\n```\n\n#### hint\n\nSet hint to true if you want to receive hints on possible bugs.\n\n#### watch\n\nSet watch to true if you want to run the simple-oop task everytime you change a file in your src directory.\n\n\n\n\n\n### Project Structure\n\nPut all of your .js files inside the directory you specify in src. All of them will be concatenated no matter how many sub-directories there are present. All projects require a Main CLASS which is where your application initializes. For a solid reference on how to structure your project please look at the [simple chess game example here.](https://github.com/jeanamarante/SimpleChess)\n\n#### CLASS\n\nReference all of the classes you want to instantiate.\n\n#### CONST\n\nDeclare all constants you use inside your application.\n\n#### SINGLE\n\nCreate singleton classes.\n\n```js\nSINGLE.Mouse = {\n    // Add all properties here.\n};\n```\n\n#### extend()\n\nExtend classes using the extend function.\n\n```js\nextend('Parent', 'Child');\n```\n\n#### append property\n\nYour going to want to declare the append property in all of your CLASS modules. The append property is what ties the methods and attributes of any CLASS module to the prototype chain.\n\n```js\nCLASS.Person = function () {\n    // Constructor\n};\n\nCLASS.Person.append = {\n    // You would always want to place the methods of the module here.\n};\n```\n\n#### Things to keep in mind:\n\n* Make sure you declare CLASS.Main in your src directory.\n\n* Only CLASS modules get exposed globally.\n\n* SINGLE modules are not meant to be instantiated.\n\n\n\n\n\n### Contact\n\nYou can contact me at jeanamarantec@gmail.com or [@jeanamarantedev](https://twitter.com/jeanamarantedev) if you have any suggestions or questions.",
  "readmeFilename": "README.md",
  "_id": "simple-oop@1.5.0",
  "_shasum": "8cad840900c07a59c66db8d13c9ca1423ae3fc2b",
  "_from": "simple-oop@"
}
